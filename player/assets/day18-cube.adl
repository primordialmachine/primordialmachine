{
  type : 'Scene',
  elements : [
    {
      // Capri.
      type : 'Color',
      name : 'capri',
      red : 0,
      green: 191,
      blue: 255,
    },
    {
      // From Capri's tetradic palette.
      type : 'Color',
      name : 'malachite',
      red : 0,
      green: 255,
      blue: 64,
    },
    {
      // From Capri's split complementary palette.
      type : 'Color',
      name : 'amber',
      red : 255,
      green: 192,
      blue: 0,
    },
    {
      type : 'Image',
      name : 'my.image',
      pixelFormat : 'RN8 GN8 BN8',
      width : 2048,
      height : 2048,
      operations : [
        {
          type : 'ImageOperations.CheckerboardPatternFill',
          numberOfCheckers : {
            horizontal : 16,
            vertical : 16,
          },
          checkerSize : {
            horizontal : 128,
            vertical : 128,
          },
          checkerColors : {
            first : { type : 'ColorInstance', reference : 'malachite' },
            second : { type : 'ColorInstance', reference : 'amber' },
          },
        }
      ],// Image.operations
    },// Image
    {
      type : 'Texture',
      name : 'my.texture',
      image : {
        type : 'ImageInstance',
        reference : 'my.image'
      } // image
    },// Texture
    {
      type : 'Material',
      name : 'my.material',
      ambientTexture : {
        type : 'TextureInstance',
        reference : 'my.texture',
      },// Material.ambientTexture
    },// Material
    {
      type : 'Mesh',
      name : 'my.cube1',
      vertexFormat : ['position xyz', 'ambient uv'],
      generator : 'cube',
      material : {
        type : 'MaterialInstance',
        reference : 'my.material',
      } // Mesh.material
    },// Mesh
    {
      type : 'Mesh',
      name : 'my.cube2',
      vertexFormat : ['position xyz', 'ambient uv'],
      generator : 'cube',
      material : {
        type : 'MaterialInstance',
        reference : 'my.material',
      },// Mesh.material
    },// Mesh
    {
      type : 'Viewer',
      name : 'my.viewer',
      source : {
        type : 'Vector3',
        x : 0,
        y : 0,
        z : 3,
      },
      target : {
        type : 'Vector3',
        x : 0,
        y : 0,
        z : 0,
      },
      up : {
        type : 'Vector3',
        x : 0,
        y : 1,
        z : 0,
      },
      optics : {
        type : 'Optics.Perspective'
      },
      controller: {
        type : 'ViewerControllers.RotateY',
        target : {
          type : 'Vector3',
          x : 0,
          y : 0,
          z : 0,
        },
        source : {
          type : 'Vector3',
          x : 0,
          y : 0,
          z : 3,
        },
        up : {
          type : 'Vector3',
          x : 0,
          y : 1,
          z : 0,     
        },
        degreesPerSecond : 25,
      },
    },// Viewer
    {
      type : 'ViewerInstance',
      reference : 'my.viewer',
    },// ViewerInstance
    {
      type : 'MeshInstance',
      transformation : {
        type : 'Translation',
        x : -1, y : 0, z : 0,
      },
      reference : 'my.cube1',
    },// MeshInstance
    {
      type : 'MeshInstance',
      transformation : {
        type : 'Translation',
        x : +1, y : 0, z : 0,
      },
      reference : 'my.cube2',
    },// MeshInstance
  ],
}
